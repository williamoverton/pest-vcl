[
  {
    "pragma_name": "geoip_opt_in",
    "pragma_type": "optional_param",
    "type": "pragma_exp",
    "value": {
      "type": "ident",
      "value": "true"
    }
  },
  {
    "pragma_name": "max_object_size",
    "pragma_type": "optional_param",
    "type": "pragma_exp",
    "value": {
      "type": "number",
      "value": "20971520"
    }
  },
  {
    "pragma_name": "smiss_max_object_size",
    "pragma_type": "optional_param",
    "type": "pragma_exp",
    "value": {
      "type": "number",
      "value": "20971520"
    }
  },
  {
    "pragma_name": "fetchless_purge_all",
    "pragma_type": "optional_param",
    "type": "pragma_exp",
    "value": {
      "type": "number",
      "value": "1"
    }
  },
  {
    "pragma_name": "allow_local_route_bypass",
    "pragma_type": "optional_param",
    "type": "pragma_exp",
    "value": {
      "type": "ident",
      "value": "true"
    }
  },
  {
    "pragma_name": "default_ssl_check_cert",
    "pragma_type": "optional_param",
    "type": "pragma_exp",
    "value": {
      "type": "number",
      "value": "1"
    }
  },
  {
    "pragma_name": "max_backends",
    "pragma_type": "optional_param",
    "type": "pragma_exp",
    "value": {
      "type": "number",
      "value": "20"
    }
  },
  {
    "pragma_name": "customer_id",
    "pragma_type": "optional_param",
    "type": "pragma_exp",
    "value": {
      "type": "string",
      "value": "\"REDACTED\""
    }
  },
  {
    "type": "weird_top_level_keywords",
    "value": "C!"
  },
  {
    "type": "weird_top_level_keywords",
    "value": "W!"
  },
  {
    "name": "F_redirect_host",
    "options": [
      {
        "key": ".always_use_host_header",
        "type": "backend_option",
        "value": {
          "type": "ident",
          "value": "true"
        }
      },
      {
        "key": ".between_bytes_timeout",
        "type": "backend_option",
        "value": {
          "period": "s",
          "type": "rtime_value",
          "value": {
            "type": "number",
            "value": "10"
          }
        }
      },
      {
        "key": ".connect_timeout",
        "type": "backend_option",
        "value": {
          "period": "s",
          "type": "rtime_value",
          "value": {
            "type": "number",
            "value": "1"
          }
        }
      },
      {
        "key": ".dynamic",
        "type": "backend_option",
        "value": {
          "type": "ident",
          "value": "true"
        }
      },
      {
        "key": ".first_byte_timeout",
        "type": "backend_option",
        "value": {
          "period": "s",
          "type": "rtime_value",
          "value": {
            "type": "number",
            "value": "15"
          }
        }
      },
      {
        "key": ".host",
        "type": "backend_option",
        "value": {
          "type": "string",
          "value": "\"example.edgecompute.app\""
        }
      },
      {
        "key": ".host_header",
        "type": "backend_option",
        "value": {
          "type": "string",
          "value": "\"example.edgecompute.app\""
        }
      },
      {
        "key": ".max_connections",
        "type": "backend_option",
        "value": {
          "type": "number",
          "value": "200"
        }
      },
      {
        "key": ".port",
        "type": "backend_option",
        "value": {
          "type": "string",
          "value": "\"443\""
        }
      },
      {
        "key": ".share_key",
        "type": "backend_option",
        "value": {
          "type": "string",
          "value": "\"1X3FeswgYyJqaqY6umjteZ\""
        }
      },
      {
        "key": ".ssl",
        "type": "backend_option",
        "value": {
          "type": "ident",
          "value": "true"
        }
      },
      {
        "key": ".ssl_cert_hostname",
        "type": "backend_option",
        "value": {
          "type": "string",
          "value": "\"example.edgecompute.app\""
        }
      },
      {
        "key": ".ssl_check_cert",
        "type": "backend_option",
        "value": {
          "type": "ident",
          "value": "always"
        }
      },
      {
        "key": ".ssl_sni_hostname",
        "type": "backend_option",
        "value": {
          "type": "string",
          "value": "\"example.edgecompute.app\""
        }
      },
      {
        "key": ".probe",
        "type": "backend_option",
        "value": [
          {
            "key": ".dummy",
            "type": "backend_option",
            "value": {
              "type": "ident",
              "value": "true"
            }
          },
          {
            "key": ".initial",
            "type": "backend_option",
            "value": {
              "type": "number",
              "value": "5"
            }
          },
          {
            "key": ".request",
            "type": "backend_option",
            "value": {
              "type": "string",
              "value": "\"HEAD / HTTP/1.1\""
            }
          },
          {
            "key": ".threshold",
            "type": "backend_option",
            "value": {
              "type": "number",
              "value": "1"
            }
          },
          {
            "key": ".timeout",
            "type": "backend_option",
            "value": {
              "period": "s",
              "type": "rtime_value",
              "value": {
                "type": "number",
                "value": "2"
              }
            }
          },
          {
            "key": ".window",
            "type": "backend_option",
            "value": {
              "type": "number",
              "value": "5"
            }
          }
        ]
      }
    ],
    "type": "backend"
  },
  {
    "name": "F_main",
    "options": [
      {
        "key": ".bypass_local_route_table",
        "type": "backend_option",
        "value": {
          "type": "ident",
          "value": "true"
        }
      },
      {
        "key": ".between_bytes_timeout",
        "type": "backend_option",
        "value": {
          "period": "s",
          "type": "rtime_value",
          "value": {
            "type": "number",
            "value": "10"
          }
        }
      },
      {
        "key": ".connect_timeout",
        "type": "backend_option",
        "value": {
          "period": "s",
          "type": "rtime_value",
          "value": {
            "type": "number",
            "value": "1"
          }
        }
      },
      {
        "key": ".dynamic",
        "type": "backend_option",
        "value": {
          "type": "ident",
          "value": "true"
        }
      },
      {
        "key": ".first_byte_timeout",
        "type": "backend_option",
        "value": {
          "period": "s",
          "type": "rtime_value",
          "value": {
            "type": "number",
            "value": "15"
          }
        }
      },
      {
        "key": ".host",
        "type": "backend_option",
        "value": {
          "type": "string",
          "value": "\"www.example.com\""
        }
      },
      {
        "key": ".max_connections",
        "type": "backend_option",
        "value": {
          "type": "number",
          "value": "200"
        }
      },
      {
        "key": ".port",
        "type": "backend_option",
        "value": {
          "type": "string",
          "value": "\"443\""
        }
      },
      {
        "key": ".share_key",
        "type": "backend_option",
        "value": {
          "type": "string",
          "value": "\"1X3FeswgYyJqaqY6umjteZ\""
        }
      },
      {
        "key": ".ssl",
        "type": "backend_option",
        "value": {
          "type": "ident",
          "value": "true"
        }
      },
      {
        "key": ".ssl_check_cert",
        "type": "backend_option",
        "value": {
          "type": "ident",
          "value": "never"
        }
      },
      {
        "key": ".ssl_sni_hostname",
        "type": "backend_option",
        "value": {
          "type": "string",
          "value": "\"example.com\""
        }
      },
      {
        "key": ".probe",
        "type": "backend_option",
        "value": [
          {
            "key": ".dummy",
            "type": "backend_option",
            "value": {
              "type": "ident",
              "value": "true"
            }
          },
          {
            "key": ".initial",
            "type": "backend_option",
            "value": {
              "type": "number",
              "value": "5"
            }
          },
          {
            "key": ".request",
            "type": "backend_option",
            "value": {
              "type": "string",
              "value": "\"HEAD / HTTP/1.1\""
            }
          },
          {
            "key": ".threshold",
            "type": "backend_option",
            "value": {
              "type": "number",
              "value": "1"
            }
          },
          {
            "key": ".timeout",
            "type": "backend_option",
            "value": {
              "period": "s",
              "type": "rtime_value",
              "value": {
                "type": "number",
                "value": "2"
              }
            }
          },
          {
            "key": ".window",
            "type": "backend_option",
            "value": {
              "type": "number",
              "value": "5"
            }
          }
        ]
      }
    ],
    "type": "backend"
  },
  {
    "name": "vcl_recv",
    "statements": [
      [
        {
          "logic_exp": {
            "comp_operator": "==",
            "type": "compare_exp",
            "value_one": {
              "type": "ident",
              "value": "req.restarts"
            },
            "value_two": {
              "type": "number",
              "value": "0"
            }
          },
          "match_statements": [
            {
              "logic_exp": {
                "type": "negated_value",
                "value": []
              },
              "match_statements": [
                {
                  "assign_operator": "=",
                  "assignee": "req.http.X-Timer",
                  "type": "set_exp",
                  "value": {
                    "type": "string",
                    "value": "\"S\""
                  }
                }
              ],
              "type": "if_exp"
            },
            {
              "assign_operator": "=",
              "assignee": "req.http.X-Timer",
              "type": "set_exp",
              "value": {
                "type": "ident",
                "value": "req.http.X-Timer"
              }
            }
          ],
          "type": "if_exp"
        },
        {
          "name": "var.fastly_req_do_shield",
          "type": "declare_exp",
          "var_type": "BOOL"
        },
        {
          "assign_operator": "=",
          "assignee": "var.fastly_req_do_shield",
          "type": "set_exp",
          "value": [
            {
              "comp_operator": "==",
              "type": "compare_exp",
              "value_one": {
                "type": "ident",
                "value": "req.restarts"
              },
              "value_two": {
                "type": "number",
                "value": "0"
              }
            }
          ]
        },
        {
          "logic_exp": {
            "comp_operator": "==",
            "type": "compare_exp",
            "value_one": {
              "type": "ident",
              "value": "req.restarts"
            },
            "value_two": {
              "type": "number",
              "value": "0"
            }
          },
          "match_statements": [
            {
              "assign_operator": "=",
              "assignee": "req.http.host",
              "type": "set_exp",
              "value": {
                "type": "string",
                "value": "\"example.edgecompute.app\""
              }
            }
          ],
          "miss_statements": [
            {
              "assign_operator": "=",
              "assignee": "req.http.host",
              "type": "set_exp",
              "value": {
                "type": "string",
                "value": "\"www.example.com\""
              }
            }
          ],
          "type": "if_exp"
        },
        {
          "assign_operator": "=",
          "assignee": "req.backend",
          "type": "set_exp",
          "value": {
            "type": "ident",
            "value": "F_redirect_host"
          }
        },
        {
          "logic_exp": {
            "comp_operator": "==",
            "type": "compare_exp",
            "value_one": {
              "type": "ident",
              "value": "req.restarts"
            },
            "value_two": {
              "type": "number",
              "value": "0"
            }
          },
          "match_statements": [
            {
              "assignee": "req.http.restarts",
              "type": "unset_exp"
            },
            {
              "assignee": "req.http.try-alt-origin",
              "type": "unset_exp"
            }
          ],
          "miss_statements": [
            {
              "assign_operator": "=",
              "assignee": "req.http.x-lookup-time",
              "type": "set_exp",
              "value": {
                "type": "ident",
                "value": "time.elapsed.msec"
              }
            },
            {
              "assign_operator": "=",
              "assignee": "req.http.restarts",
              "type": "set_exp",
              "value": {
                "type": "ident",
                "value": "req.restarts"
              }
            },
            {
              "assign_operator": "=",
              "assignee": "req.http.Fastly-Force-Shield",
              "type": "set_exp",
              "value": {
                "type": "string",
                "value": "\"1\""
              }
            },
            {
              "assign_operator": "=",
              "assignee": "req.backend",
              "type": "set_exp",
              "value": {
                "type": "ident",
                "value": "F_main"
              }
            },
            {
              "next": "lookup",
              "type": "return_exp"
            }
          ],
          "type": "if_exp"
        },
        {
          "assign_operator": "=",
          "assignee": "req.backend",
          "type": "set_exp",
          "value": {
            "type": "ident",
            "value": "F_redirect_host"
          }
        },
        {
          "logic_exp": {
            "type": "negated_value",
            "value": []
          },
          "match_statements": [
            {
              "code": {
                "type": "number",
                "value": "801"
              },
              "message": {
                "type": "string",
                "value": "\"Force SSL\""
              },
              "type": "error_exp"
            }
          ],
          "type": "if_exp"
        },
        {
          "logic_exp": {
            "comp_operator": "!=",
            "type": "compare_exp",
            "value_one": {
              "type": "ident",
              "value": "req.request"
            },
            "value_two": {
              "type": "string",
              "value": "\"HEAD\""
            }
          },
          "match_statements": [
            {
              "next": "pass",
              "type": "return_exp"
            }
          ],
          "type": "if_exp"
        },
        {
          "next": "lookup",
          "type": "return_exp"
        }
      ]
    ],
    "type": "sub"
  },
  {
    "name": "vcl_fetch",
    "statements": [
      [
        {
          "assign_operator": "=",
          "assignee": "beresp.http.Fastly-Debug-Path",
          "type": "set_exp",
          "value": {
            "type": "string",
            "value": "\"(F \""
          }
        },
        {
          "logic_exp": {
            "type": "ident",
            "value": "req.http.Fastly-Vary-String"
          },
          "match_statements": [
            {
              "logic_exp": {
                "type": "ident",
                "value": "beresp.http.Vary"
              },
              "match_statements": [
                {
                  "assign_operator": "=",
                  "assignee": "beresp.http.Vary",
                  "type": "set_exp",
                  "value": {
                    "type": "string",
                    "value": "\"Fastly-Vary-String, \""
                  }
                }
              ],
              "miss_statements": [
                {
                  "assign_operator": "=",
                  "assignee": "beresp.http.Vary",
                  "type": "set_exp",
                  "value": {
                    "type": "string",
                    "value": "\"Fastly-Vary-String, \""
                  }
                }
              ],
              "type": "if_exp"
            }
          ],
          "type": "if_exp"
        },
        {
          "logic_exp": {
            "comp_operator": "!=",
            "type": "compare_exp",
            "value_one": {
              "type": "ident",
              "value": "beresp.status"
            },
            "value_two": {
              "type": "number",
              "value": "301"
            }
          },
          "match_statements": [
            {
              "assign_operator": "=",
              "assignee": "beresp.http.Vary:restarts",
              "type": "set_exp",
              "value": {
                "type": "string",
                "value": "\"\""
              }
            },
            {
              "assign_operator": "=",
              "assignee": "beresp.cacheable",
              "type": "set_exp",
              "value": {
                "type": "ident",
                "value": "true"
              }
            },
            {
              "assign_operator": "=",
              "assignee": "beresp.ttl",
              "type": "set_exp",
              "value": {
                "period": "s",
                "type": "rtime_value",
                "value": {
                  "type": "number",
                  "value": "5"
                }
              }
            },
            {
              "assign_operator": "=",
              "assignee": "beresp.http.do_failover",
              "type": "set_exp",
              "value": {
                "type": "string",
                "value": "\"yes\""
              }
            }
          ],
          "type": "if_exp"
        },
        {
          "next": "deliver",
          "type": "return_exp"
        },
        {
          "logic_exp": [
            {
              "comp_operator": "==",
              "type": "compare_exp",
              "value_one": {
                "type": "ident",
                "value": "beresp.status"
              },
              "value_two": {
                "type": "number",
                "value": "500"
              }
            }
          ],
          "match_statements": [
            {
              "type": "restart_exp"
            }
          ],
          "type": "if_exp"
        },
        {
          "logic_exp": {
            "comp_operator": ">",
            "type": "compare_exp",
            "value_one": {
              "type": "ident",
              "value": "req.restarts"
            },
            "value_two": {
              "type": "number",
              "value": "0"
            }
          },
          "match_statements": [
            {
              "assign_operator": "=",
              "assignee": "beresp.http.Fastly-Restarts",
              "type": "set_exp",
              "value": {
                "type": "ident",
                "value": "req.restarts"
              }
            }
          ],
          "type": "if_exp"
        },
        {
          "logic_exp": {
            "type": "ident",
            "value": "beresp.http.Set-Cookie"
          },
          "match_statements": [
            {
              "assign_operator": "=",
              "assignee": "req.http.Fastly-Cachetype",
              "type": "set_exp",
              "value": {
                "type": "string",
                "value": "\"SETCOOKIE\""
              }
            },
            {
              "next": "pass",
              "type": "return_exp"
            }
          ],
          "type": "if_exp"
        },
        {
          "logic_exp": {
            "comp_operator": "~",
            "type": "compare_exp",
            "value_one": {
              "type": "ident",
              "value": "beresp.http.Cache-Control"
            },
            "value_two": {
              "type": "string",
              "value": "\"private\""
            }
          },
          "match_statements": [
            {
              "assign_operator": "=",
              "assignee": "req.http.Fastly-Cachetype",
              "type": "set_exp",
              "value": {
                "type": "string",
                "value": "\"PRIVATE\""
              }
            },
            {
              "next": "pass",
              "type": "return_exp"
            }
          ],
          "type": "if_exp"
        },
        {
          "logic_exp": {
            "comp_operator": "==",
            "type": "compare_exp",
            "value_one": {
              "type": "ident",
              "value": "beresp.status"
            },
            "value_two": {
              "type": "number",
              "value": "500"
            }
          },
          "match_statements": [
            {
              "assign_operator": "=",
              "assignee": "req.http.Fastly-Cachetype",
              "type": "set_exp",
              "value": {
                "type": "string",
                "value": "\"ERROR\""
              }
            },
            {
              "assign_operator": "=",
              "assignee": "beresp.ttl",
              "type": "set_exp",
              "value": {
                "period": "s",
                "type": "rtime_value",
                "value": {
                  "type": "number",
                  "value": "1"
                }
              }
            },
            {
              "assign_operator": "=",
              "assignee": "beresp.grace",
              "type": "set_exp",
              "value": {
                "period": "s",
                "type": "rtime_value",
                "value": {
                  "type": "number",
                  "value": "5"
                }
              }
            },
            {
              "next": "deliver",
              "type": "return_exp"
            }
          ],
          "type": "if_exp"
        },
        {
          "logic_exp": {
            "type": "ident",
            "value": "beresp.http.Expires"
          },
          "match_statements": [],
          "miss_statements": [
            {
              "assign_operator": "=",
              "assignee": "beresp.ttl",
              "type": "set_exp",
              "value": {
                "period": "s",
                "type": "rtime_value",
                "value": {
                  "type": "number",
                  "value": "3600"
                }
              }
            }
          ],
          "type": "if_exp"
        },
        {
          "next": "deliver",
          "type": "return_exp"
        }
      ]
    ],
    "type": "sub"
  },
  {
    "name": "vcl_hit",
    "statements": [
      [
        {
          "assign_operator": "=",
          "assignee": "req.http.Fastly-Tmp-Obj-TTL",
          "type": "set_exp",
          "value": {
            "type": "ident",
            "value": "obj.ttl"
          }
        },
        {
          "assign_operator": "=",
          "assignee": "req.http.Fastly-Tmp-Obj-Grace",
          "type": "set_exp",
          "value": {
            "type": "ident",
            "value": "obj.grace"
          }
        },
        [
          [
            {
              "assign_operator": "=",
              "assignee": "req.http.Fastly-Cachetype",
              "type": "set_exp",
              "value": {
                "type": "string",
                "value": "\"HIT\""
              }
            }
          ]
        ],
        {
          "logic_exp": {
            "type": "negated_value",
            "value": []
          },
          "match_statements": [
            {
              "next": "pass",
              "type": "return_exp"
            }
          ],
          "type": "if_exp"
        },
        {
          "next": "deliver",
          "type": "return_exp"
        }
      ]
    ],
    "type": "sub"
  },
  {
    "name": "vcl_miss",
    "statements": [
      [
        {
          "assignee": "req.http.Fastly-Tmp-Obj-TTL",
          "type": "unset_exp"
        },
        {
          "assignee": "req.http.Fastly-Tmp-Obj-Grace",
          "type": "unset_exp"
        },
        [
          [
            {
              "logic_exp": {
                "type": "ident",
                "value": "req.http.Fastly-Check-SHA1"
              },
              "match_statements": [
                {
                  "code": {
                    "type": "number",
                    "value": "550"
                  },
                  "message": {
                    "type": "string",
                    "value": "\"Doesnt exist\""
                  },
                  "type": "error_exp"
                }
              ],
              "type": "if_exp"
            },
            [
              [
                [
                  [
                    {
                      "logic_exp": {
                        "type": "ident",
                        "value": "req.http.Fastly-FF"
                      },
                      "match_statements": [
                        {
                          "assign_operator": "=",
                          "assignee": "bereq.http.Fastly-Client",
                          "type": "set_exp",
                          "value": {
                            "type": "string",
                            "value": "\"1\""
                          }
                        }
                      ],
                      "type": "if_exp"
                    }
                  ]
                ],
                [
                  [
                    {
                      "assignee": "bereq.http.Fastly-Original-Cookie",
                      "type": "unset_exp"
                    },
                    {
                      "assignee": "bereq.http.Fastly-Original-URL",
                      "type": "unset_exp"
                    },
                    {
                      "assignee": "bereq.http.Fastly-Vary-String",
                      "type": "unset_exp"
                    },
                    {
                      "assignee": "bereq.http.X-Varnish-Client",
                      "type": "unset_exp"
                    }
                  ]
                ],
                {
                  "logic_exp": {
                    "type": "ident",
                    "value": "req.http.Fastly-Temp-XFF"
                  },
                  "match_statements": [
                    {
                      "logic_exp": {
                        "comp_operator": "==",
                        "type": "compare_exp",
                        "value_one": {
                          "type": "ident",
                          "value": "req.http.Fastly-Temp-XFF"
                        },
                        "value_two": {
                          "type": "string",
                          "value": "\"\""
                        }
                      },
                      "match_statements": [
                        {
                          "assignee": "bereq.http.X-Forwarded-For",
                          "type": "unset_exp"
                        }
                      ],
                      "miss_statements": [
                        {
                          "assign_operator": "=",
                          "assignee": "bereq.http.X-Forwarded-For",
                          "type": "set_exp",
                          "value": {
                            "type": "ident",
                            "value": "req.http.Fastly-Temp-XFF"
                          }
                        }
                      ],
                      "type": "if_exp"
                    }
                  ],
                  "type": "if_exp"
                }
              ]
            ],
            {
              "assign_operator": "=",
              "assignee": "req.http.Fastly-Cachetype",
              "type": "set_exp",
              "value": {
                "type": "string",
                "value": "\"MISS\""
              }
            }
          ]
        ],
        {
          "next": "fetch",
          "type": "return_exp"
        }
      ]
    ],
    "type": "sub"
  },
  {
    "name": "vcl_deliver",
    "statements": [
      [
        {
          "logic_exp": {
            "type": "ident",
            "value": "req.http.Fastly-Debug"
          },
          "match_statements": [
            {
              "assign_operator": "=",
              "assignee": "resp.http.Fastly-Debug-Path",
              "type": "set_exp",
              "value": {
                "type": "string",
                "value": "\"(D \""
              }
            },
            {
              "assign_operator": "=",
              "assignee": "resp.http.Fastly-Debug-TTL",
              "type": "set_exp",
              "value": {
                "first_args": [
                  {
                    "type": "string",
                    "value": "\"(H \""
                  }
                ],
                "logic_exp": "obj.hits > 0",
                "second_args": [
                  {
                    "type": "string",
                    "value": "\"(M \""
                  }
                ],
                "type": "inline_if_exp"
              }
            },
            {
              "assign_operator": "=",
              "assignee": "resp.http.Fastly-Debug-Digest",
              "type": "set_exp",
              "value": {
                "args": [
                  {
                    "type": "ident",
                    "value": "req.digest"
                  }
                ],
                "name": "digest.hash_sha256",
                "type": "func_call"
              }
            }
          ],
          "miss_statements": [
            {
              "assignee": "resp.http.Fastly-Debug-Path",
              "type": "unset_exp"
            },
            {
              "assignee": "resp.http.Fastly-Debug-TTL",
              "type": "unset_exp"
            },
            {
              "assignee": "resp.http.Fastly-Debug-Digest",
              "type": "unset_exp"
            }
          ],
          "type": "if_exp"
        },
        [
          [
            {
              "logic_exp": {
                "type": "negated_value",
                "value": []
              },
              "match_statements": [
                {
                  "assign_operator": "=",
                  "assignee": "resp.http.X-Served-By",
                  "type": "set_exp",
                  "value": {
                    "type": "ident",
                    "value": "server.identity"
                  }
                }
              ],
              "miss_statements": [
                {
                  "assign_operator": "=",
                  "assignee": "resp.http.X-Served-By",
                  "type": "set_exp",
                  "value": {
                    "type": "ident",
                    "value": "resp.http.X-Served-By"
                  }
                }
              ],
              "type": "if_exp"
            },
            {
              "assign_operator": "=",
              "assignee": "resp.http.X-Cache",
              "type": "set_exp",
              "value": {
                "first_args": [
                  {
                    "type": "ident",
                    "value": "resp.http.X-Cache"
                  },
                  {
                    "type": "string",
                    "value": "\", \""
                  }
                ],
                "logic_exp": "resp.http.X-Cache",
                "second_args": [
                  {
                    "type": "string",
                    "value": "\"\""
                  }
                ],
                "type": "inline_if_exp"
              }
            },
            {
              "logic_exp": {
                "type": "negated_value",
                "value": []
              },
              "match_statements": [
                {
                  "assign_operator": "=",
                  "assignee": "resp.http.X-Cache-Hits",
                  "type": "set_exp",
                  "value": {
                    "type": "ident",
                    "value": "obj.hits"
                  }
                }
              ],
              "miss_statements": [
                {
                  "assign_operator": "=",
                  "assignee": "resp.http.X-Cache-Hits",
                  "type": "set_exp",
                  "value": {
                    "type": "ident",
                    "value": "resp.http.X-Cache-Hits"
                  }
                }
              ],
              "type": "if_exp"
            }
          ]
        ],
        {
          "logic_exp": {
            "type": "ident",
            "value": "req.http.X-Timer"
          },
          "match_statements": [
            {
              "assign_operator": "=",
              "assignee": "resp.http.X-Timer",
              "type": "set_exp",
              "value": {
                "type": "ident",
                "value": "req.http.X-Timer"
              }
            }
          ],
          "type": "if_exp"
        },
        [
          [
            {
              "assign_operator": "=",
              "assignee": "resp.http.Vary",
              "type": "set_exp",
              "value": {
                "args": [
                  {
                    "type": "ident",
                    "value": "resp.http.Vary"
                  },
                  {
                    "type": "string",
                    "value": "\"Fastly-Vary-String, \""
                  },
                  {
                    "type": "string",
                    "value": "\"\""
                  }
                ],
                "name": "regsub",
                "type": "func_call"
              }
            },
            {
              "logic_exp": {
                "comp_operator": "~",
                "type": "compare_exp",
                "value_one": {
                  "type": "ident",
                  "value": "resp.http.Vary"
                },
                "value_two": {
                  "type": "string",
                  "value": "\"^\\s*$\""
                }
              },
              "match_statements": [
                {
                  "assignee": "resp.http.Vary",
                  "type": "unset_exp"
                }
              ],
              "type": "if_exp"
            }
          ]
        ],
        {
          "assignee": "resp.http.X-Varnish",
          "type": "unset_exp"
        },
        {
          "assign_operator": "=",
          "assignee": "req.http.Surrogate-Key",
          "type": "set_exp",
          "value": {
            "type": "ident",
            "value": "resp.http.Surrogate-Key"
          }
        },
        {
          "assign_operator": "=",
          "assignee": "req.http.Surrogate-Control",
          "type": "set_exp",
          "value": {
            "type": "ident",
            "value": "resp.http.Surrogate-Control"
          }
        },
        {
          "logic_exp": {
            "type": "negated_value",
            "value": []
          },
          "match_statements": [
            {
              "assignee": "resp.http.Surrogate-Key",
              "type": "unset_exp"
            },
            {
              "assignee": "resp.http.Surrogate-Control",
              "type": "unset_exp"
            }
          ],
          "type": "if_exp"
        },
        {
          "logic_exp": {
            "comp_operator": "==",
            "type": "compare_exp",
            "value_one": {
              "type": "ident",
              "value": "resp.status"
            },
            "value_two": {
              "type": "number",
              "value": "550"
            }
          },
          "match_statements": [
            {
              "next": "deliver",
              "type": "return_exp"
            }
          ],
          "type": "if_exp"
        },
        {
          "logic_exp": {
            "type": "negated_value",
            "value": []
          },
          "match_statements": [
            {
              "assign_operator": "=",
              "assignee": "req.http.try-alt-origin",
              "type": "set_exp",
              "value": {
                "type": "string",
                "value": "\"1\""
              }
            },
            {
              "assign_operator": "=",
              "assignee": "req.http.x-redirect-lookup-ms",
              "type": "set_exp",
              "value": {
                "type": "ident",
                "value": "resp.http.x-redirect-lookup-ms"
              }
            },
            {
              "assign_operator": "=",
              "assignee": "req.http.x-fastly-pop",
              "type": "set_exp",
              "value": {
                "type": "ident",
                "value": "resp.http.x-fastly-pop"
              }
            },
            {
              "assign_operator": "=",
              "assignee": "req.http.x-fastly-region",
              "type": "set_exp",
              "value": {
                "type": "ident",
                "value": "resp.http.x-fastly-region"
              }
            },
            {
              "assign_operator": "=",
              "assignee": "req.http.x-fastly-traceid",
              "type": "set_exp",
              "value": {
                "type": "ident",
                "value": "resp.http.x-fastly-traceid"
              }
            },
            {
              "type": "restart_exp"
            }
          ],
          "type": "if_exp"
        },
        {
          "assign_operator": "=",
          "assignee": "resp.http.x-fastly-total-lookup-time",
          "type": "set_exp",
          "value": {
            "type": "ident",
            "value": "req.http.x-lookup-time"
          }
        },
        {
          "assign_operator": "=",
          "assignee": "resp.http.x-fastly-compute-time",
          "type": "set_exp",
          "value": {
            "type": "ident",
            "value": "req.http.x-redirect-lookup-ms"
          }
        },
        {
          "assign_operator": "=",
          "assignee": "resp.http.x-fastly-vcl-pop",
          "type": "set_exp",
          "value": {
            "type": "ident",
            "value": "server.datacenter"
          }
        },
        {
          "assign_operator": "=",
          "assignee": "resp.http.x-fastly-pop",
          "type": "set_exp",
          "value": {
            "type": "ident",
            "value": "req.http.x-fastly-pop"
          }
        },
        {
          "assign_operator": "=",
          "assignee": "resp.http.x-fastly-region",
          "type": "set_exp",
          "value": {
            "type": "ident",
            "value": "req.http.x-fastly-region"
          }
        },
        {
          "assign_operator": "=",
          "assignee": "resp.http.x-fastly-traceid",
          "type": "set_exp",
          "value": {
            "type": "ident",
            "value": "req.http.x-fastly-traceid"
          }
        },
        {
          "assign_operator": "=",
          "assignee": "resp.http.Strict-Transport-Security",
          "type": "set_exp",
          "value": {
            "type": "string",
            "value": "\"max-age=300\""
          }
        },
        {
          "next": "deliver",
          "type": "return_exp"
        }
      ]
    ],
    "type": "sub"
  },
  {
    "name": "vcl_error",
    "statements": [
      [
        {
          "logic_exp": {
            "comp_operator": "==",
            "type": "compare_exp",
            "value_one": {
              "type": "ident",
              "value": "obj.status"
            },
            "value_two": {
              "type": "number",
              "value": "801"
            }
          },
          "match_statements": [
            {
              "assign_operator": "=",
              "assignee": "obj.status",
              "type": "set_exp",
              "value": {
                "type": "number",
                "value": "301"
              }
            },
            {
              "assign_operator": "=",
              "assignee": "obj.response",
              "type": "set_exp",
              "value": {
                "type": "string",
                "value": "\"Moved Permanently\""
              }
            },
            {
              "assign_operator": "=",
              "assignee": "obj.http.Location",
              "type": "set_exp",
              "value": {
                "type": "string",
                "value": "\"https://\""
              }
            },
            {
              "type": "synthetic_exp",
              "value": ""
            },
            {
              "next": "deliver",
              "type": "return_exp"
            }
          ],
          "type": "if_exp"
        },
        {
          "logic_exp": {
            "type": "ident",
            "value": "req.http.Fastly-Restart-On-Error"
          },
          "match_statements": [
            {
              "logic_exp": {
                "comp_operator": "==",
                "type": "compare_exp",
                "value_one": {
                  "type": "ident",
                  "value": "obj.status"
                },
                "value_two": {
                  "type": "number",
                  "value": "503"
                }
              },
              "match_statements": [
                {
                  "type": "restart_exp"
                }
              ],
              "type": "if_exp"
            }
          ],
          "type": "if_exp"
        },
        [
          [
            {
              "logic_exp": {
                "comp_operator": "==",
                "type": "compare_exp",
                "value_one": {
                  "type": "ident",
                  "value": "obj.status"
                },
                "value_two": {
                  "type": "number",
                  "value": "550"
                }
              },
              "match_statements": [
                {
                  "next": "deliver",
                  "type": "return_exp"
                }
              ],
              "type": "if_exp"
            }
          ]
        ]
      ]
    ],
    "type": "sub"
  },
  {
    "name": "vcl_pipe",
    "statements": [
      [
        [
          [
            [
              [
                [
                  [
                    {
                      "logic_exp": {
                        "type": "ident",
                        "value": "req.http.Fastly-FF"
                      },
                      "match_statements": [
                        {
                          "assign_operator": "=",
                          "assignee": "bereq.http.Fastly-Client",
                          "type": "set_exp",
                          "value": {
                            "type": "string",
                            "value": "\"1\""
                          }
                        }
                      ],
                      "type": "if_exp"
                    }
                  ]
                ],
                [
                  [
                    {
                      "assignee": "bereq.http.Fastly-Original-Cookie",
                      "type": "unset_exp"
                    },
                    {
                      "assignee": "bereq.http.Fastly-Original-URL",
                      "type": "unset_exp"
                    },
                    {
                      "assignee": "bereq.http.Fastly-Vary-String",
                      "type": "unset_exp"
                    },
                    {
                      "assignee": "bereq.http.X-Varnish-Client",
                      "type": "unset_exp"
                    }
                  ]
                ],
                {
                  "logic_exp": {
                    "type": "ident",
                    "value": "req.http.Fastly-Temp-XFF"
                  },
                  "match_statements": [
                    {
                      "logic_exp": {
                        "comp_operator": "==",
                        "type": "compare_exp",
                        "value_one": {
                          "type": "ident",
                          "value": "req.http.Fastly-Temp-XFF"
                        },
                        "value_two": {
                          "type": "string",
                          "value": "\"\""
                        }
                      },
                      "match_statements": [
                        {
                          "assignee": "bereq.http.X-Forwarded-For",
                          "type": "unset_exp"
                        }
                      ],
                      "miss_statements": [
                        {
                          "assign_operator": "=",
                          "assignee": "bereq.http.X-Forwarded-For",
                          "type": "set_exp",
                          "value": {
                            "type": "ident",
                            "value": "req.http.Fastly-Temp-XFF"
                          }
                        }
                      ],
                      "type": "if_exp"
                    }
                  ],
                  "type": "if_exp"
                }
              ]
            ],
            {
              "assign_operator": "=",
              "assignee": "req.http.Fastly-Cachetype",
              "type": "set_exp",
              "value": {
                "type": "string",
                "value": "\"PIPE\""
              }
            },
            {
              "assign_operator": "=",
              "assignee": "bereq.http.connection",
              "type": "set_exp",
              "value": {
                "type": "string",
                "value": "\"close\""
              }
            }
          ]
        ]
      ]
    ],
    "type": "sub"
  },
  {
    "name": "vcl_pass",
    "statements": [
      [
        [
          [
            [
              [
                [
                  [
                    {
                      "logic_exp": {
                        "type": "ident",
                        "value": "req.http.Fastly-FF"
                      },
                      "match_statements": [
                        {
                          "assign_operator": "=",
                          "assignee": "bereq.http.Fastly-Client",
                          "type": "set_exp",
                          "value": {
                            "type": "string",
                            "value": "\"1\""
                          }
                        }
                      ],
                      "type": "if_exp"
                    }
                  ]
                ],
                [
                  [
                    {
                      "assignee": "bereq.http.Fastly-Original-Cookie",
                      "type": "unset_exp"
                    },
                    {
                      "assignee": "bereq.http.Fastly-Original-URL",
                      "type": "unset_exp"
                    },
                    {
                      "assignee": "bereq.http.Fastly-Vary-String",
                      "type": "unset_exp"
                    },
                    {
                      "assignee": "bereq.http.X-Varnish-Client",
                      "type": "unset_exp"
                    }
                  ]
                ],
                {
                  "logic_exp": {
                    "type": "ident",
                    "value": "req.http.Fastly-Temp-XFF"
                  },
                  "match_statements": [
                    {
                      "logic_exp": {
                        "comp_operator": "==",
                        "type": "compare_exp",
                        "value_one": {
                          "type": "ident",
                          "value": "req.http.Fastly-Temp-XFF"
                        },
                        "value_two": {
                          "type": "string",
                          "value": "\"\""
                        }
                      },
                      "match_statements": [
                        {
                          "assignee": "bereq.http.X-Forwarded-For",
                          "type": "unset_exp"
                        }
                      ],
                      "miss_statements": [
                        {
                          "assign_operator": "=",
                          "assignee": "bereq.http.X-Forwarded-For",
                          "type": "set_exp",
                          "value": {
                            "type": "ident",
                            "value": "req.http.Fastly-Temp-XFF"
                          }
                        }
                      ],
                      "type": "if_exp"
                    }
                  ],
                  "type": "if_exp"
                }
              ]
            ],
            {
              "assign_operator": "=",
              "assignee": "req.http.Fastly-Cachetype",
              "type": "set_exp",
              "value": {
                "type": "string",
                "value": "\"PASS\""
              }
            }
          ]
        ]
      ]
    ],
    "type": "sub"
  },
  {
    "name": "vcl_log",
    "statements": [],
    "type": "sub"
  },
  {
    "name": "vcl_hash",
    "statements": [
      [
        [
          [
            {
              "assign_operator": "+=",
              "assignee": "req.hash",
              "type": "set_exp",
              "value": {
                "type": "ident",
                "value": "req.url"
              }
            },
            {
              "assign_operator": "+=",
              "assignee": "req.hash",
              "type": "set_exp",
              "value": {
                "type": "ident",
                "value": "req.http.host"
              }
            },
            {
              "assign_operator": "+=",
              "assignee": "req.hash",
              "type": "set_exp",
              "value": {
                "type": "ident",
                "value": "req.vcl.generation"
              }
            },
            {
              "assign_operator": "=",
              "assignee": "beans",
              "type": "set_exp",
              "value": [
                {
                  "comp_operator": "+",
                  "type": "calc_exp",
                  "value_one": {
                    "type": "ident",
                    "value": "cake"
                  },
                  "value_two": {
                    "type": "number",
                    "value": "2"
                  }
                }
              ]
            },
            {
              "next": "hash",
              "type": "return_exp"
            }
          ]
        ]
      ]
    ],
    "type": "sub"
  }
]
